{"version":3,"sources":["Components/Navbar.js","Components/MainCont.js","Components/Sidenav.js","Components/Footer.js","Components/Contrib.js","Components/Register.js","Components/TopTrendingTemplate.js","Components/Login.js","Components/LyricsMain.js","Components/Profile.js","Components/EditLyrics.js","Components/findByArtist.js","Components/findByTitle.js","Components/findByAuthor.js","Components/findByAlbum.js","Components/findByLang.js","Components/SidenavAuth.js","Components/Favouarites.js","App.js","index.js"],"names":["Navbar","state","url","handleClearLocalStorage","window","localStorage","removeItem","props","logOut","className","id","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","this","onClick","onOpen","isAuth","role","aria-haspopup","aria-labelledby","username","pathname","name","React","Component","MainCont","handleSearch","fetchedData","Object","entries","data","searchTerm","searchSongs","filter","val","songTitle","toLowerCase","includes","songSinger","songLang","userAuthor","songAlbum","map","key","_id","handleSubmit","event","preventDefault","array","setState","redirect","redirectInfo","handleInputChange","target","value","querryData","titles","authors","artists","bind","a","fetch","response","json","titleArray","artistArray","authorArray","i","length","push","style","fontSize","autoComplete","onSubmit","required","placeholder","onChange","undefined","video","title","author","src","frameBorder","allow","allowFullScreen","Sidenav","spreadData","item","slicedData","slice","reverse","onClose","Footer","facebook","twitter","instagram","gitHub","youTube","telegram","rel","htmlFor","Contribute","titleSong","authorSong","urlSong","songLyrics","albumSong","langSong","embedUrl","errorHandler","resultHandler","resultError","views","split","fullDataAPI","lyricsAuthor","postData","handleOnChangeInput","convertUrltoUrlEmbed","handleViews","method","headers","body","JSON","stringify","result","status","console","log","cursor","cols","rows","maxLength","marginTop","width","height","Register","registerfname","registerUsername","registerEmail","registerPassword","registerPasswordRe","email","fullName","password","TopTrendingTemplate","lyrics","Login","loginUsername","loginPassword","noAuth","then","responseData","storage","token","message","uid","userId","setItem","authInfo","LyricsMain","handleFav","record","likeArray","liked","handleFavAPI","aria-hidden","flag","error","success","location","lyricId","songId","requestOptions","handleReset","songUrlEmbed","Profile","oldPassword","newPwd1","newPwd2","oldEmail","newEmail1","newEmail2","emailsDontMatch","fillFieldsEmail","newEmailsDontMatch","emailSuccess","pwdDontMatch","fillFieldsPwd","newPwdDontMatch","pwdSuccess","handleAuth","currentUrlArray","usernameCheck","handleLyricPosts","post","songUrlYt","handleLyricDelete","handleSubmitChangeEmail","sendEmailChange","handleSubmitChangePwd","newPwd","oldPwd","sendPwdChange","posts","delId","confirm","maxHeight","overflowY","EditLyrics","urlSongEmbed","emptyFields","apiResponse","updateLyrics","handleUpdate","postHandler","objFetched","currentUrl","postIdCheck","FindByArtist","FindByTitle","FindByAuthor","FindByAlbum","FindByLanguage","SidenavAuth","handleAuthAPI","handleAuthData","objData","dataInit","user","fav","Favouarites","App","sidenavFlag","topTrendingSong","siteViews","lyricsURL","authConn","handleSidenav","sidenav","document","getElementById","display","giveAuthInfo","AUTH","parse","getItem","handleLogOut","dataLength","path","exact","render","component","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f77bc6e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar extends React.Component {\r\n    state = {\r\n        url: \"#\"\r\n    }\r\n\r\n    handleClearLocalStorage = () => {\r\n        window.localStorage.removeItem('authData');\r\n        this.props.logOut();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\r\n                <Link className=\"navbar-brand\" id=\"navbarTitle\"  to=\"/\">Lyrical Place</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n    \r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href={this.state.url}>Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button className=\"nav-link\" id=\"navBtn\" onClick={this.props.onOpen}>{this.props.isAuth.isAuth === true  ? \"Favouarites\" : \"Latest Uploads\" }</button>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href={this.state.url} id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Find Lyrics\r\n                    </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <Link className=\"dropdown-item\" to=\"/lyrics/Artists\">Artist</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/lyrics/Album\">Album</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/lyrics/Authors\">Author</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/lyrics/Titles\">Title</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/lyrics/Language\">Language</Link>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/contrib\">Contribute</Link>\r\n                        </li>\r\n                        {this.props.isAuth.isAuth === true ? \r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to={`/profile/${this.props.isAuth.username}`}>My Profile</Link>\r\n                        </li>\r\n                        : \r\n                        '' \r\n                        }\r\n                        {this.props.isAuth.isAuth === true ? \r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to={{ pathname: `/profile/${this.props.isAuth.username}/faviouarites`, state: { props: this.props.isAuth, name: this.props.isAuth.username }}}>My Favourites</Link>\r\n                        </li>\r\n                        : \r\n                        '' \r\n                        }\r\n                    </ul> \r\n                        {this.props.isAuth.isAuth === true  ? \r\n                        <div className=\"form-row align-items-center\">                            \r\n                            <div className=\"col-auto my-1 btn-group align-items-center\">\r\n                                <small className=\"text-light\">You are signed in as {this.props.isAuth.username}</small>\r\n                                <button type=\"button\" className=\"ml-1\" id=\"navbarRegister\" onClick={this.handleClearLocalStorage}>Logout</button>\r\n                            </div>\r\n                        </div> \r\n                        :                      \r\n                        <div className=\"form-row align-items-center\">                            \r\n                            <div className=\"col-auto my-1 btn-group\">\r\n                                <Link type=\"submit\" name=\"login-submit\" id=\"navbarLogin\" to=\"/login\">Login</Link>\r\n                                <Link type=\"button\" className=\"ml-1\" id=\"navbarRegister\" to=\"/register\">Register</Link>\r\n                            </div>\r\n                        </div>\r\n                        }                 \r\n                </div>\r\n        </nav>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nexport default class MainCont extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            url: \"\",\r\n            data: '',\r\n            querryData: '',\r\n            titles: '',\r\n            authors: '',\r\n            artists: '',\r\n            searchSongs: '',\r\n            redirect: false,\r\n            redirectInfo: null\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n    \r\n\r\n    // API Call {: GETTER :}\r\n    async componentDidMount() {\r\n        const url = \"https://lyricalplace-api.herokuapp.com/api/topTrendingSong\";\r\n\r\n        const response = await fetch(url);\r\n\r\n        const data = await response.json();\r\n\r\n        var titleArray = [];\r\n        var artistArray = [];\r\n        var authorArray = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            titleArray.push(data[i].songTitle);\r\n            artistArray.push(data[i].songSinger);\r\n            authorArray.push(data[i].userAuthor);\r\n        }\r\n\r\n        this.setState({\r\n            data: data,\r\n            titles: titleArray,\r\n            artists: artistArray,\r\n            authors: authorArray\r\n        })\r\n    }\r\n\r\n    handleSearch = () => {\r\n        let fetchedData = Object.entries(this.state.data);\r\n        let searchTerm = this.state.searchSongs;\r\n\r\n        return fetchedData.filter((val) => \r\n            searchTerm === '' ? \"\" : val[1].songTitle.toLowerCase().includes(searchTerm.toLowerCase()) || val[1].songSinger.toLowerCase().includes(searchTerm.toLowerCase()) || val[1].songLang.toLowerCase().includes(searchTerm.toLowerCase()) ||  val[1].userAuthor.toLowerCase().includes(searchTerm.toLowerCase()) || val[1].songAlbum.toLowerCase().includes(searchTerm.toLowerCase())  ? val : ''\r\n        ).map((val, key) => {\r\n            if (key > 9) {\r\n                return null\r\n            }\r\n            return (\r\n                <a className=\"a-search\" key={key} href={`/lyrics/${val[1]._id}`}>\r\n                    {val[1].songTitle} - {val[1].songSinger}  by {val[1].userAuthor} ({val[1].songLang}) ({val[1].songAlbum})\r\n                </a>\r\n            )\r\n        })\r\n    }  \r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        let fetchedData = Object.entries(this.state.data);\r\n        let searchTerm = this.state.searchSongs;\r\n\r\n        const array =  fetchedData.filter((val) => \r\n            searchTerm === '' ? \"\" : val[1].songTitle.toLowerCase().includes(searchTerm.toLowerCase()) || val[1].songSinger.toLowerCase().includes(searchTerm.toLowerCase()) || val[1].songLang.toLowerCase().includes(searchTerm.toLowerCase()) ||  val[1].userAuthor.toLowerCase().includes(searchTerm.toLowerCase()) || val[1].songAlbum.toLowerCase().includes(searchTerm.toLowerCase())  ? val : ''\r\n        ).map((val, key) => {\r\n            if (key > 9) {\r\n                return null\r\n            }\r\n            return (\r\n                [`/lyrics/${val[1]._id}`, val[1].songTitle]\r\n            )\r\n        })\r\n\r\n        this.setState({\r\n            redirect: true,\r\n            redirectInfo: array[0][0]\r\n        })\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            searchSongs: event.target.value\r\n        })\r\n        this.handleSearch();\r\n    }\r\n\r\n    render () {\r\n        const { data } = this.state\r\n        return (\r\n            <>\r\n                {this.state.redirect === true ? <Redirect to={this.state.redirectInfo} /> : ''}\r\n                <div className=\"top-side\">\r\n                    <h3>Welcome to Lyrical Place</h3>\r\n                    <h5>The best place for songs lyrics!</h5>\r\n                    <hr/>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"p-container\"> \r\n                        <header style={{fontSize: 24}}>Our Goals!</header>\r\n                        <p>\r\n                            As an organizasion, we want to achieve the best quality Lyric Page on the internet. We continiously add new and new songs to reach this goal. Now, you can support us too by writing the lyrics of your faviourite song for yourself! This way, you help ous cover more and more songs and you help the commuinty and anyone searching lyrics for any song they enjoy! Be a part of us <a href=\"/register\">today</a>!\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"p-container\">\r\n                        <header style={{fontSize: 24}}>Lyrical Place!</header>\r\n                        <p>\r\n                            You can search any song you want on our site, from all over the world. If it does not exit yet, you can add it, or request for the addition. Doing this, will send a request to the admins of the site, and warn any other user that a request on this song has been made! You can learn more about <Link to=\"/contrib\">requests</Link> here!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-search\">\r\n                    <header className=\"text-center\">You can search any song you like here!</header>\r\n                    <small className=\"text-center text-dark pl-3 pr-3\">You can search by any criteria, and the top ten suggestions will appear. Click one and you will be redirected to the lyric page of this song!</small>\r\n                    <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"search-bar-dropdown d-flex flex-row justify-content-center align-items-center\">\r\n                            <input type=\"text\" className=\"form-control\" name=\"searchSongs\" id=\"searchSongs\" required placeholder=\"Search your song here...\" onChange={this.handleInputChange} autoComplete=\"off\" />\r\n                            <button type=\"submit\">Search!</button>\r\n                        </div>\r\n                        {data[0] !== undefined ? this.handleSearch() : \"\"}\r\n                    </form>\r\n                </div>\r\n                <div className=\"topTrending\">\r\n                    <header>{this.props.video.title}</header>\r\n                    <small className=\"text-center text-dark pl-3 pr-3 mb-3\">By {this.props.video.author}</small>\r\n                    <iframe src={this.props.video.src} title={this.props.video.title} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen id=\"iframeTrending\"></iframe>\r\n                    <div>\r\n                        <h6><Link to=\"/lyrics/topTrendingSong\">Check Lyrics</Link></h6>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n// params={this.props.video.lyrics}","import React from 'react';\r\n\r\nexport default class Sidenav extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            url: '',\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    // API Call Non AUTHED USER\r\n    async componentDidMount() {\r\n        const url = \"https://lyricalplace-api.herokuapp.com/api/topTrendingSong\";\r\n\r\n        const response = await fetch(url);\r\n\r\n        const data = await response.json();\r\n\r\n        const slicedData = data.slice(-10).reverse();\r\n\r\n        this.setState({\r\n            data: slicedData\r\n        })\r\n    }\r\n\r\n    spreadData = () => {\r\n        let objData = Object.entries(this.state.data)\r\n\r\n        return objData.map(item => {\r\n\r\n            // Return Data\r\n            return (\r\n                <a key={item[1]._id + \"link\"} href={`/lyrics/${item[1]._id}`}>\r\n                    <span key={item[1]._id + \"first_span\"} className=\"sidenav-span\" >{item[1].songTitle} - {item[1].songSinger} ({item[1].songLang})</span>\r\n                    <br />\r\n                    <span className=\"sidenav-by\" key={item[1]._id + \"second_span\"}>Lyrics by: {item[1].userAuthor}</span>\r\n                </a> \r\n            )\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"sideNav\" id=\"sidenav\">\r\n                <button onClick={this.props.onClose}>{this.props.isAuth.isAuth === true  ? \"\" : \"Hide Latest Uploads\" } <i className=\"fa fa-times\"></i></button>\r\n                <hr/>\r\n                {this.spreadData()}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Footer extends React.Component {\r\n    state = {\r\n        facebook: \"https://www.facebook.com/\",\r\n        twitter: \"https://twitter.com/\",\r\n        instagram: \"https://www.instagram.com/\",\r\n        gitHub: \"https://github.com/\",\r\n        youTube: \"https://www.youtube.com/\",\r\n        telegram: \"https://telegram.org/\",\r\n        url: \"\"\r\n    }\r\n    render () {\r\n        return (\r\n            <footer className=\"sticky-bottom mt-5\">\r\n                <div className=\"social-media\">\r\n                    <a href={this.state.facebook} target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-facebook\"></i></a>\r\n                    <a href={this.state.twitter} target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-twitter\"></i></a>\r\n                    <a href={this.state.instagram} target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-instagram\"></i></a>\r\n                    <a href={this.state.gitHub} target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-git-square\"></i></a>\r\n                    <a href={this.state.youTube} target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-youtube-square\"></i></a>\r\n                    <a href={this.state.telegram} target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-telegram\"></i></a>\r\n                </div>  \r\n                <div className=\"footer-flex\">\r\n                    <div className=\"half-footer\">\r\n                        <header>Newsletter</header>\r\n                        <p>\r\n                            We don't like spam, and sure, so does you! So we only sent valiable emails, informing you only for the things that matter to you!\r\n                        </p>\r\n                        <div>\r\n                            <form>\r\n                                <label htmlFor=\"emailNewsletter\">Your e-mail here:</label>\r\n                                <input type=\"email\" name=\"emailNewsletter\" id=\"emailNewsletter\" placeholder=\"Plaease, give your email here...\" required className=\"form-control\" />\r\n                            </form>\r\n                            <button type=\"button\" id=\"formNewsletterBtn\" name=\"formNewsletterBtn\">Subscribe!</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"half-footer\">\r\n                        <header>Usefull Links</header>\r\n                        <ul className=\"list-group\">\r\n                            <a href={this.state.url} className=\"list-group-item\">Our team</a>\r\n                            <a href={this.state.url} className=\"list-group-item\">Donate</a>\r\n                            <a href={this.state.url} className=\"list-group-item\">Contact us</a>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 text-center text-muted p-4\">\r\n                    <h6>All rights reserved &copy;2021 Lyrical Place</h6>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class Contribute extends React.Component {\r\n\r\n    state = {\r\n        titleSong: '',\r\n        authorSong: '',\r\n        urlSong: '',\r\n        songLyrics: '',\r\n        albumSong: '',\r\n        langSong: '',\r\n        embedUrl: '',\r\n        errorHandler: false,\r\n        resultHandler: false,\r\n        resultError: false,\r\n        views: false\r\n    }\r\n\r\n    // API Fetch -- Method POST\r\n    async postData(data) {\r\n\r\n        try {\r\n            const url = \"https://lyricalplace-api.herokuapp.com/api/contrib/form\"\r\n            let result = await fetch(url , {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n\r\n            // console.log(result.status, \"Reasult\")\r\n\r\n            // Check for response, if it's 200 (OK), output a success message\r\n            if (result.status === 201) {\r\n                this.setState({\r\n                    resultHandler: true\r\n                })\r\n            } \r\n            // Check for response, if it's not 200 (OK), output an error message\r\n            if (result.status !== 201) {\r\n                this.setState({\r\n                    resultError: true\r\n                })\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Get data from state\r\n        const data = this.state;\r\n\r\n        // Check For Empty Fields\r\n        if (data.titleSong === '' || data.authorSong === '' || data.urlSong === '' || data.songLyrics === '' || data.albumSong === '' || data.langSong === '') {\r\n            this.setState({\r\n                errorHandler: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        // Set errorHandler to false in case user made a false request before\r\n        this.setState({\r\n            errorHandler: false\r\n        })\r\n\r\n        // Reset Request error/success variables\r\n        this.setState({\r\n            resultError: false,\r\n            resultHandler: false\r\n        })\r\n\r\n        // Get URL from YouTube\r\n        const url = this.state.urlSong;\r\n\r\n        // Split URL on '=' to get Embed Code // arrUrl[1] -> Contains the Embed Code\r\n        const arrUrl = url.split('=');\r\n\r\n        // Build Embed URL \r\n        const embedUrl = \"https://www.youtube.com/embed/\" + arrUrl[1];\r\n\r\n        // Rebuild Object For API POST\r\n        const fullDataAPI = {\r\n            titleSong: data.titleSong,\r\n            authorSong: data.authorSong,\r\n            urlSong: data.urlSong,\r\n            embedUrl: embedUrl,\r\n            songLyrics: data.songLyrics,\r\n            albumSong: data.albumSong,\r\n            lyricsAuthor: this.props.isAuth.username,\r\n            songLang: data.langSong\r\n        }\r\n\r\n        // Call Fetch Function Passing In Data\r\n        this.postData(fullDataAPI);\r\n\r\n        // Test Outputs\r\n        // console.log(data, arrUrl[1], embedUrl, fullDataAPI)\r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n        this.convertUrltoUrlEmbed();\r\n    }\r\n\r\n    handleViews = () => {\r\n        this.setState({\r\n            views: !this.state.views\r\n        })\r\n    }\r\n\r\n    convertUrltoUrlEmbed = () => {\r\n        // Get URL from YouTube\r\n        const url = this.state.urlSong;\r\n\r\n        // Split URL on '=' to get Embed Code // arrUrl[1] -> Contains the Embed Code\r\n        const arrUrl = url.split('=');\r\n\r\n        // Build Embed URL \r\n        const embedUrl = \"https://www.youtube.com/embed/\" + arrUrl[1];\r\n\r\n        this.setState({\r\n            embedUrl: embedUrl\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                {this.props.isAuth.isAuth === false ? <Redirect to=\"/\"></Redirect> : \"\"}\r\n                <h2 className=\"text-center m-5\" style={{cursor: \"default\"}}>Help us improve and expand our collection!</h2>\r\n                <div id=\"contrib-outer\">                \r\n                    <div className=\"contrib-form\">\r\n                        <header>Contribute Form</header>\r\n                        {this.state.errorHandler === true ? <h4 className=\"text-danger text-center\">Please fill all the fields!</h4> : \"\"}\r\n                        {this.state.resultError === true ? <h4 className=\"text-danger text-center\">Something went wrong while contacting server!</h4> : \"\"}\r\n                        {this.state.resultHandler === true ? <h4  className=\"text-success text-center\">Your lyrics are uploaded succesfully!</h4> : \"\"}\r\n                        <form onSubmit={this.handleSubmit} >\r\n                            <label htmlFor=\"titleSong\">Song Title: *</label>\r\n                            <input type=\"text\" placeholder=\"Title of song...\" name=\"titleSong\" id=\"titleSong\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <label htmlFor=\"authorSong\">Song Singer(s): *</label>                                              \r\n                            <input type=\"text\" placeholder=\"Singer(s) of song...\" name=\"authorSong\" id=\"authorSong\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <label htmlFor=\"langSong\">Song Language: *</label>\r\n                            <input type=\"text\" placeholder=\"Song language...\" name=\"langSong\" id=\"langSong\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <label htmlFor=\"albumSong\">Song Album: *</label>\r\n                            <br/>\r\n                            <small className=\"text-danger ml-3\">If the song is a Single, please write \"Single\" on the field!</small>\r\n                            <input type=\"text\" placeholder=\"Album of song...\" name=\"albumSong\" id=\"albumSong\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <label htmlFor=\"urlSong\">Song URL: *</label>\r\n                            <input type=\"text\" placeholder=\"YouTube URL of song...\" name=\"urlSong\" id=\"urlSong\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <label htmlFor=\"songLyrics\">Song Lyrics: ( 10.000 Words Maximum ) *</label> \r\n                            <br/>\r\n                            <small className=\"text-danger ml-3\">Note: Lyrics will display exactly as you wirte them here!</small>\r\n                            <textarea name=\"songLyrics\" id=\"songLyrics\" cols=\"30\" rows=\"10\" placeholder=\"Write lyrics here...\" className=\"form-control\" maxLength=\"10000\" onChange={this.handleOnChangeInput} ></textarea>\r\n                            <button type=\"submit\" className=\"mt-3\">Submit</button>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                    <hr className=\"bg-dark\" style={{marginTop: 35}} />\r\n                    <div className=\"contrib-info\">\r\n                        <div className=\"circle-cont\">\r\n                            {this.state.views === false ? \r\n                            <>\r\n                                <i className=\"circle-fill\"></i>\r\n                                <i className=\"circle-outer\"></i>\r\n                            </>\r\n                            : \r\n                            <>\r\n                                <i className=\"circle-outer\"></i>\r\n                                <i className=\"circle-fill\"></i>\r\n                            </> \r\n                            }\r\n                        </div>\r\n                        {this.state.views === false ? \r\n                            <>\r\n                            <header id=\"main-header\">Contribute Info <i className=\"fa fa-info-circle\"></i></header>\r\n                            <div id=\"outer-col-6\">\r\n                                <button id=\"buttonPreview_Info\" onClick={this.handleViews}>Switch to preview here...</button>\r\n                                <div className=\"col-6 half-contrib\">\r\n                                    <header>How to Contribute?</header>\r\n                                    <div>\r\n                                        <p>\r\n                                            Contrbuting for us is an easy-to-do task! As soon as you make an account, you can write lyric-posts and contribute! Beign here means you already meet this criteria, so the only thing left is to fill out the form with the song you want to write lyrics about. Remember two thing before you start writting! First, your lyric-post can be reported by other users if it's out of context or offensive! And secondly, we provide a render view wich you can access by pressing the \"Preview\" button any time you want. This will show a quck peek at a rendered view of your post. DISCLMAIMER: THIS VIEW WILL NOT BE EXCACTLY AS IT WILL APPEAR IN TERMS OF STYLING. IT'S HERE JUST TO HELP YOU SEE BETTER AND UNDERSTAND WHAT YOU WRITTING! Keep in mind, and happy writting!\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6 half-contrib-work\">\r\n                                    <header>How it works?</header>\r\n                                    <div>\r\n                                        <p>\r\n                                            We have a simple and elegant system for writting and uploading lyrics, to protect the website from spams and wrong lyrics. So here is how it works. Our site works some-what like a blog. You can post freely for whatever song you like, any time you like. Other users searching for this song's lyrics will see your submition, and other user's submitions. Gradually and over time some submitions will get more likes and will appear on the top. If you find any Lyrics containig non-valid content, they can be reported and will be checked by admins! Remember, you can change any misstakes you made anytime in the \"MyProfile\" section!\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </>\r\n                        : \r\n                        <>\r\n                        <header>Preview</header>\r\n                        <h6 className=\"text-center text-light\">Here you can take a peek for your lyric-post.</h6>\r\n                        <button id=\"buttonPreview_Info\" onClick={this.handleViews}>Switch to info view here...</button>\r\n                        <div className=\"preview-cont\">\r\n                            <h3>{this.state.authorSong} {this.state.authorSong !== \"\" && this.state.titleSong !== \"\" ? \"-\" : \"\"} {this.state.titleSong} {this.state.langSong === \"\" ? \"\" : <span>({this.state.langSong})</span> }</h3>\r\n                            <h6 className=\"text-center\">{this.state.albumSong}</h6>\r\n                            <hr />\r\n                            <div className=\"d-flex flex-row justify-content-center align-items-center\">\r\n                                <iframe width=\"280\" height=\"157.5\" src={this.state.embedUrl} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                            </div>\r\n                            <div className=\"bg-dark text-light p-4 rounded\">\r\n                                {this.state.songLyrics}\r\n                            </div>\r\n                            <h6>Lyrics by: {this.props.isAuth.username}</h6>\r\n                        </div>\r\n                        </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n// {/* <div id=\"outer-col-6\">\r\n//     <div className=\"col-6 half-contrib\">\r\n//         <header>How to Contribute?</header>\r\n//         <div>\r\n//             To contribute you must fullfill 3 specific criteria. These criteria are:\r\n//             <ul>\r\n//                 <li>Have an account on Lyrical Place.</li>\r\n//                 <li>Your account must be verified.</li>\r\n//                 <li>Be a member for at least 2 days on this site.</li>\r\n//             </ul>\r\n//             After these criteria are met, you can send us a request and upload the lyrics on the site if everything is fine!\r\n//         </div>\r\n//     </div>\r\n//     <div className=\"col-6 half-contrib-work\">\r\n//         <header>How it works?</header>\r\n//         <div>\r\n//             The system we probive works with a simple and secure way to guarantee that lyrics provided by users are legit and well written! Here, we analyse for you how exactly our system works: \r\n//             <ul>\r\n//                 <li>Send us a request for the lyrics of a song.</li>\r\n//                 <li>We check it and if it's well written and legit we upload the lyrics</li>\r\n//                 <li>Even if it doesn't get aprooved we send you an email informing you about mistakes and what is wrong.</li>\r\n//             </ul>\r\n//             Happy writting!\r\n//         </div>\r\n//     </div>\r\n// </div> */}","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nexport default class Register extends React.Component {\r\n\r\n    state = {\r\n        registerfname: '',\r\n        registerUsername: '',\r\n        registerEmail: '',\r\n        registerPassword: '',\r\n        registerPasswordRe: '',\r\n        errorHandler: false,\r\n        resultHandler: false,\r\n        resultError: false\r\n    }\r\n\r\n    // API Fetch -- Method POST\r\n    async postData(data) {\r\n\r\n        try {\r\n            const url = \"https://lyricalplace-api.herokuapp.com/api/user/signup\"\r\n            let result = await fetch(url , {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n\r\n            // console.log(result.status, \"Reasult\")\r\n\r\n            // Check for response, if it's 200 (OK), output a success message\r\n            if (result.status === 201) {\r\n                this.setState({\r\n                    resultHandler: true\r\n                })\r\n                // Redirect User\r\n                // window.location.href = \"http://192.168.1.114:3000/login\";\r\n            } \r\n            // Check for response, if it's not 200 (OK), output an error message\r\n            if (result.status !== 201) {\r\n                this.setState({\r\n                    resultError: true\r\n                })\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Get data from state\r\n        const data = this.state;\r\n\r\n        // Check For Empty Fields\r\n        if (data.registerfname === '' || data.registerUsername === '' || data.registerEmail === '' || data.registerPassword === '' || data.registerPasswordRe === '') {\r\n            this.setState({\r\n                errorHandler: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        // Check Password Validation\r\n        if (data.registerPassword !== data.registerPasswordRe) {\r\n            // Passwords Don't Match Error\r\n            return;\r\n        }\r\n\r\n        // Set errorHandler to false in case user made a false request before\r\n        this.setState({\r\n            errorHandler: false\r\n        })\r\n\r\n        // Reset Request error/success variables\r\n        this.setState({\r\n            resultError: false,\r\n            resultHandler: false\r\n        })\r\n\r\n        // Build API Send Data POST\r\n        const fullDataAPI = {\r\n            email: data.registerEmail,\r\n            username: data.registerUsername,\r\n            fullName: data.registerfname,\r\n            password: data.registerPassword\r\n        }\r\n\r\n        // Call Fetch Function Passing In Data\r\n        this.postData(fullDataAPI);\r\n\r\n        // Test Outputs\r\n        console.log(data, fullDataAPI)\r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                {this.props.isAuth.isAuth === true ? <Redirect to=\"/\"></Redirect> : \"\"}\r\n                <div className=\"register-outer\">\r\n                    <div className=\"register-init\">\r\n                        <header>Register Form</header>\r\n                        <h6>It's free!</h6>\r\n                            {this.state.errorHandler === true ? <h4 className=\"text-danger text-center\">Please fill all the fields!</h4> : \"\"}\r\n                            {this.state.resultError === true ? <h4 className=\"text-danger text-center\">Something went wrong while contacting server!</h4> : \"\"}\r\n                            {this.state.resultHandler === true ? <h4  className=\"text-success text-center\">Your account created succesfully!</h4> : \"\"}                    \r\n                            <form  onSubmit={this.handleSubmit}>\r\n                            <label htmlFor=\"registerfname\">Full Name: *</label>\r\n                            <input type=\"text\" name=\"registerfname\" id=\"registerfname\" placeholder=\"Full Name\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <label htmlFor=\"registerUsername\">Username: *</label>\r\n                            <input type=\"text\" name=\"registerUsername\" id=\"registerUsername\" placeholder=\"Username\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <label htmlFor=\"registerEmail\">Email: *</label>\r\n                            <input type=\"email\" name=\"registerEmail\" id=\"registerEmail\" placeholder=\"Email\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <label htmlFor=\"registerPassword\">Password: *</label>\r\n                            <input type=\"password\" name=\"registerPassword\" id=\"registerPassword\" placeholder=\"Password\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <label htmlFor=\"registerPasswordRe\">Confirm Password: *</label>\r\n                            <input type=\"password\" name=\"registerPasswordRe\" id=\"registerPasswordRe\" placeholder=\"Confirm Password\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                            <div className=\"text-right mt-4\">\r\n                                <small className=\"text-right mr-4\">Already have an account? <Link to=\"/login\">Sign in</Link></small>\r\n                                <button type=\"submit\">Register!</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"register-info\">\r\n                        <header id=\"main-header-register\">Register Info <i className=\"fa fa-info-circle\"></i></header>\r\n                        <div>\r\n                            <header>Account and data policy</header>\r\n                            <div>\r\n                                <p>\r\n                                    We do not share any information about you with anyone. Lyrical Place is an organizasion, and we support freedom. We keep these data stricktly for ourselfs. We offered and will continue to offer complitly free servises for everyone. Our register will always be free of charge. Lyrical Place, is 100% founded by donations!\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <header>Benefits of having an account</header>\r\n                            <div>\r\n                                <p>\r\n                                    We offer a variaty of benefits for members of Lyrical Place. Members will have access to the Contribute page, where they can write lyrics for any song they like. Also, they have access to their profile page, where thay can customize their account setting and see their liked song lyrics. Make a new account today! It's free and will always be!  \r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class TopTrendingTemplate extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{cursor: \"default\"}} className=\"d-flex flex-column justify-content-center align-items-center\" id=\"topTrendingDiv\">\r\n                <h3 className=\"text-center mt-5 mb-3\">{this.props.video.author} - {this.props.video.title} Lyrics</h3>\r\n                <iframe src={this.props.video.src} title={this.props.video.title} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen id=\"iframeTrending\" className=\"mb-4 mt-3\"></iframe>\r\n                <div className=\"bg-dark text-light\">\r\n                    {this.props.video.lyrics} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Login extends Component {\r\n\r\n    state = {\r\n        loginUsername: '',\r\n        loginPassword: '',\r\n        errorHandler: false,\r\n        resultHandler: false,\r\n        resultError: false,\r\n        noAuth: false,\r\n    }\r\n\r\n    // API Fetch -- Method POST\r\n    async postData(data) {\r\n\r\n        try {\r\n            const url = \"https://lyricalplace-api.herokuapp.com/api/user/login\"\r\n            let result = await fetch(url , {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n\r\n            // console.log(result.status, \"Reasult\")\r\n\r\n            // Check for response, if it's 200 (OK), output a success message\r\n            if (result.status === 200) {\r\n                this.setState({\r\n                    errorHandler: false,\r\n                    resultHandler: true,\r\n                    resultError: false\r\n                })\r\n                result.json().then(responseData => {\r\n                    const token = responseData.token;\r\n                    const message = responseData.message;\r\n                    const username = responseData.uid;\r\n                    const userId = responseData.userId;\r\n                    const email = responseData.email;\r\n\r\n                    const storage = {\r\n                        token: token,\r\n                        message: message,\r\n                        username: username,\r\n                        userId: userId,\r\n                        email: email,\r\n                        isAuth: true\r\n                    }\r\n\r\n                    localStorage.setItem('authData', JSON.stringify(storage));\r\n                    this.props.authInfo();\r\n                })\r\n\r\n                \r\n\r\n                // Redirect User\r\n                // window.location.href = \"http://192.168.1.114:3000/\";\r\n            } \r\n            // Check For Invalid Data (not auth)\r\n            if (result.status === 401) {\r\n                this.setState({\r\n                    noAuth: true\r\n                })\r\n            }\r\n            // Check for response, if it's not 200 (OK), output an error message\r\n            if (result.status !== 200 && result.status !== 401) {\r\n                this.setState({\r\n                    resultError: true\r\n                })\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Get data from state\r\n        const data = this.state;\r\n\r\n        // Check For Empty Fields\r\n        if (data.loginUsername === '' || data.loginPassword === '') {\r\n            this.setState({\r\n                errorHandler: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        // Set errorHandler to false in case user made a false request before\r\n        this.setState({\r\n            errorHandler: false\r\n        })\r\n\r\n        // Reset Request error/success variables\r\n        this.setState({\r\n            resultError: false,\r\n            resultHandler: false\r\n        })\r\n\r\n        // Build Object For API POST\r\n        const fullDataAPI = {\r\n            username: data.loginUsername,\r\n            password: data.loginPassword\r\n        }\r\n\r\n        // Call Fetch Function Passing In Data\r\n        this.postData(fullDataAPI);\r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-outer\">\r\n                <div className=\"login-form\">\r\n                    <header>Login Form</header>\r\n                    <h6>Welcome back!</h6>\r\n                    {this.state.errorHandler === true ? <h4 className=\"text-danger text-center\">Please fill all the fields!</h4> : \"\"}\r\n                    {this.state.resultError === true ? <h4 className=\"text-danger text-center\">Something went wrong while contacting server!</h4> : \"\"}\r\n                    {this.state.resultHandler === true ? <h4  className=\"text-success text-center\">Signed in succesfully!</h4> : \"\"}  \r\n                    {this.state.noAuth === true ? <h4 className=\"text-danger text-center\">Invalid Username / Password</h4> : \"\"}\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"loginUsername\">Username: </label>\r\n                        <input type=\"text\" name=\"loginUsername\" id=\"loginUsername\" placeholder=\"Username...\"  className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                        <label htmlFor=\"loginPassword\">Password: </label>\r\n                        <input type=\"password\" name=\"loginPassword\" id=\"loginPassword\" placeholder=\"Password...\"  className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                        <div className=\"login-form-buttons text-right\">\r\n                            <small>Don't have an account? <Link to=\"/register\">Register!</Link></small>\r\n                            <button type=\"submit\">Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"login-info\">\r\n                    <div>\r\n                        <header>Welcome to Lyrical Place</header>\r\n                        <div>\r\n                            <p>\r\n                                As a member you can enjoy multiple rewards, post lyrics and vote for other user's lyric posts! Happy writing!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class LyricsMain extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            record: '',\r\n            error: false,\r\n            success: false\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    async componentDidMount() {\r\n        \r\n        try {\r\n            const pathname = window.location.pathname;\r\n            const lyricId = pathname.split(\"/\");\r\n\r\n            const url = \"https://lyricalplace-api.herokuapp.com/api/lyrics/getItem\"\r\n            let result = await fetch(url , {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify({songId: lyricId[2]})\r\n            });\r\n\r\n            if (result.status === 200) {\r\n                result.json().then(item => {\r\n                    this.setState({\r\n                        record: item.record[0]\r\n                    })\r\n                })\r\n            } else {\r\n                console.log(\"ERROR 500\")\r\n            }\r\n            \r\n            \r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    async handleReset() {\r\n        \r\n        try {\r\n            const pathname = window.location.pathname;\r\n            const lyricId = pathname.split(\"/\");\r\n\r\n            const url = \"https://lyricalplace-api.herokuapp.com/api/lyrics/getItem\"\r\n            let result = await fetch(url , {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify({songId: lyricId[2]})\r\n            });\r\n\r\n            if (result.status === 200) {\r\n                result.json().then(item => {\r\n                    this.setState({\r\n                        record: item.record[0]\r\n                    })\r\n                })\r\n            } else {\r\n                console.log(\"ERROR 500\")\r\n            }\r\n            \r\n            \r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    async handleFavAPI() {\r\n        const url = `https://lyricalplace-api.herokuapp.com/api/updateFav/${this.props.authInfo.username}`;\r\n\r\n        const data = {\r\n            id: this.state.record._id\r\n        }\r\n\r\n        // PUT Request Options\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { \r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json', \r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        const result = await fetch(url, requestOptions);\r\n\r\n        // Reset States\r\n        this.setState({\r\n            error: false,\r\n            success: false\r\n        })\r\n\r\n        if (result.status === 500 || result.status === 404) {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else if (result.status === 200) {\r\n            result.json().then(responseData => {\r\n                console.log(responseData.message)\r\n                this.setState({\r\n                    success: responseData.message\r\n                })\r\n            })\r\n            \r\n        }\r\n\r\n        this.handleReset();\r\n    }\r\n\r\n    handleFav = () => {\r\n        // Check For Props\r\n        if (this.props.authInfo.username !== undefined && this.props.authInfo.username !== '') {\r\n\r\n            if (this.props.authInfo.username === this.state.record.userAuthor) {\r\n                // Can't add to fav the song you written\r\n                return null;\r\n            } else {\r\n                const likeArray = this.state.record.liked\r\n                \r\n                // Check Liked Songs Are Present\r\n                if (likeArray !== undefined) {\r\n\r\n                    if (likeArray.length === 0) {\r\n                        return <button className=\"btn btn-danger ml-3\" onClick={() => this.handleFavAPI(this.props.authInfo.username)}>Add  <i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button>\r\n                    } else {\r\n\r\n                        var flag = false;\r\n                        for (let i = 0; i < likeArray.length; i++) {\r\n                            if (likeArray[i] === this.props.authInfo.username) {\r\n                                // remove\r\n                                flag = true;\r\n                            }\r\n                        }\r\n\r\n                        if (flag === true) {\r\n                            return <button className=\"btn btn-outline-danger ml-3\" onClick={() => this.handleFavAPI(this.props.authInfo.username)}>Remove  <i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button> \r\n                        } else {\r\n                            return <button className=\"btn btn-danger ml-3\" onClick={() => this.handleFavAPI(this.props.authInfo.username)}>Add  <i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button> \r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n                \r\n    render() {\r\n        return (\r\n            <>  \r\n                <div style={{cursor: \"default\"}} className=\"d-flex flex-column justify-content-center align-items-center\" id=\"lyricsPages\">\r\n                    {this.state.error === true ? <h4 className=\"text-center text-danger\">Something Went Wrong Contacting The Server...</h4> : ''}\r\n                    {this.state.success !== false ? <h4 className=\"text-center text-success\">{this.state.success}</h4> : ''}\r\n                    <h3 className=\"text-center mt-5 mb-3\">{this.state.record.userAuthor} - {this.state.record.songTitle} Lyrics \r\n                        {this.handleFav()}\r\n                    </h3>\r\n                    {/* {this.state.love === null ? \"\" : this.state.love === true ? <h4 className=\"h4-fav-song\">Song added to favouarites!</h4> : <h4 className=\"h4-fav-song\">Song removed from favouarites!</h4>} */}\r\n                    <iframe src={this.state.record.songUrlEmbed} title={this.state.record.songTitle} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen id=\"iframeTrending\" className=\"mb-4 mt-3\"></iframe>\r\n                    <div className=\"info-lyrics-small\">\r\n                        <h3>Song Info</h3>\r\n                        <hr />\r\n                        <h5>Singer(s): {this.state.record.songSinger}</h5>\r\n                        <h5>Language: {this.state.record.songLang}</h5>\r\n                        <h5>Album: {this.state.record.songAlbum}</h5>\r\n                        <h5>Lyrics by: {this.state.record.userAuthor}</h5>\r\n                    </div>\r\n                    <div className=\"bg-dark text-light\">\r\n                        {this.state.record.songLyrics} \r\n                    </div>\r\n                </div>\r\n                <div className=\"sidenav-info-lyrics\">\r\n                    <h3>Song Info</h3>\r\n                    <hr />\r\n                    <h5>Singer(s): {this.state.record.songSinger}</h5>\r\n                    <h5>Language: {this.state.record.songLang}</h5>\r\n                    <h5>Album: {this.state.record.songAlbum}</h5>\r\n                    <h5>Lyrics by: {this.state.record.userAuthor}</h5>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Profile extends Component {\r\n\r\n    state = {\r\n        fetchedData: \"\",\r\n        oldPassword: '',\r\n        newPwd1: '',\r\n        newPwd2: '',\r\n        oldEmail: '',\r\n        newEmail1: '',\r\n        newEmail2: '',\r\n        emailsDontMatch: false,\r\n        fillFieldsEmail: false,\r\n        newEmailsDontMatch: false,\r\n        emailSuccess: null,\r\n        pwdDontMatch: false,\r\n        fillFieldsPwd: false,\r\n        newPwdDontMatch: false,\r\n        pwdSuccess: null,\r\n        url: \"\"\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n\r\n            const url = \"https://lyricalplace-api.herokuapp.com/api/lyrics/getUser\"\r\n            let result = await fetch(url , {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username: this.props.authInfo.username })\r\n            });\r\n\r\n            if (result.status === 200) {\r\n                result.json().then(responseData => {\r\n                    this.setState({\r\n                        fetchedData: responseData.posts\r\n                    })\r\n                })   \r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async handleLyricDelete(delId, title) {\r\n        if (window.confirm(\"Are you sure you want to delete the song with title \" + title + \"?\")) {\r\n            const url = `https://lyricalplace-api.herokuapp.com/api/lyrics/${delId}`;\r\n            let result = await fetch(url, {\r\n                method: 'delete',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                }\r\n            })\r\n\r\n            if (result.status === 200) {\r\n                console.log(\"Lyric Post Deleted!\")\r\n            }\r\n            else {\r\n                console.log(\"Something went wrong!\")\r\n            }\r\n        }\r\n    }\r\n\r\n    handleAuth = () => {\r\n        // Get current URL\r\n        var currentUrl = window.location.href;\r\n\r\n        // Split current URL on \"/\" \r\n        var currentUrlArray = currentUrl.split(\"/\");\r\n\r\n        // Get last item from array, witch is the username\r\n        var usernameCheck = currentUrlArray[currentUrlArray.length - 1]\r\n\r\n        // If it's not the same for the logged in user, redirect him to the main page (Access Dined)\r\n        if (this.props.authInfo.username !== usernameCheck) {\r\n            return (\r\n                <Redirect to=\"/\" />\r\n            )\r\n        }\r\n    }\r\n\r\n    handleLyricPosts = () => {\r\n        let objFetched = Object.entries(this.state.fetchedData);\r\n        return objFetched.map(post => {\r\n            return (\r\n                <div className={`lyricPostIdiv ${post[1]._id}`} key={post[1]._id}>\r\n                    <h3>Title: {post[1].songTitle}</h3>\r\n                    <hr />\r\n                    <p>\r\n                        <span>Singer: {post[1].songSinger}</span>\r\n                        <br />\r\n                        <span>Song URL: {post[1].songUrlYt}</span>\r\n                        <br />\r\n                        <span>Album: {post[1].songAlbum}</span>\r\n                        <br />\r\n                        <span>Language: {post[1].songLang}</span>\r\n                        <br />\r\n                        <span>Lyrics: {post[1].songLyrics}</span>\r\n                    </p>\r\n                    <hr />\r\n                    <div>\r\n                        <div>\r\n                            <span>{post[1].userAuthor}</span>\r\n                        </div>\r\n                        <div>\r\n                            <a className=\"btn btn-secondary\" href={`/profile/${this.props.authInfo.username}/${post[1]._id}`} >Edit</a>\r\n                            <button className=\"btn btn-danger\" onClick={() => {this.handleLyricDelete(post[1]._id, post[1].songTitle)}}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    handleSubmitChangeEmail = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Reset State Error Handlers For Email\r\n        this.setState({\r\n            emailsDontMatch: false,\r\n            fillFieldsEmail: false,\r\n            newEmailsDontMatch: false,\r\n            emailSuccess: null\r\n        })\r\n\r\n        if (this.state.newEmail1 === \"\" || this.state.newEmail2 === \"\" || this.state.oldEmail === \"\") {\r\n            this.setState({\r\n                fillFieldsEmail: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (this.state.newEmail1 !== this.state.newEmail2) {\r\n            this.setState({\r\n                newEmailsDontMatch: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (this.state.oldEmail !== this.props.authInfo.email) {\r\n            this.setState({\r\n                emailsDontMatch: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            email: this.state.newEmail1\r\n        }\r\n\r\n        const url = `https://lyricalplace-api.herokuapp.com/api/user/updateInfo/${this.props.authInfo.userId}`;\r\n\r\n        this.sendEmailChange(data, url);\r\n    }\r\n\r\n    async sendEmailChange(data, url) {\r\n        // PUT Request Options\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { \r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json', \r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        const response = await fetch(url, requestOptions);\r\n\r\n        if (response.status === 500) {\r\n            this.setState({\r\n                emailSuccess: false\r\n            })\r\n            return;\r\n        }\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                emailSuccess: true\r\n            })\r\n            return;\r\n        }\r\n        this.setState({\r\n            emailSuccess: false\r\n        })\r\n    }\r\n\r\n    handleSubmitChangePwd = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Reset Values\r\n        this.setState({\r\n            pwdDontMatch: false,\r\n            fillFieldsPwd: false,\r\n            newPwdDontMatch: false,\r\n            pwdSuccess: null\r\n        })\r\n\r\n        if (this.state.newPwd1 === \"\" || this.state.newPwd2 === \"\" || this.state.oldPassword === \"\") {\r\n            this.setState({\r\n                fillFieldsPwd: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (this.state.newPwd1 !== this.state.newPwd2) {\r\n            this.setState({\r\n                newPwdDontMatch: true\r\n            })\r\n            return\r\n        }\r\n\r\n        const data = {\r\n            newPwd: this.state.newPwd1,\r\n            oldPwd: this.state.oldPassword\r\n        }\r\n\r\n        const url = `https://lyricalplace-api.herokuapp.com/api/user/updateInfo/${this.props.authInfo.userId}`;\r\n\r\n        this.sendPwdChange(data, url);\r\n    }\r\n\r\n    async sendPwdChange(data, url) {\r\n        // PUT Request Options\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { \r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json', \r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        const response = await fetch(url, requestOptions);\r\n\r\n        if (response.status === 500) {\r\n            this.setState({\r\n                pwdDontMatch: true\r\n            })\r\n            return;\r\n        }\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                pwdSuccess: true\r\n            })\r\n            return;\r\n        }\r\n        this.setState({\r\n            pwdDontMatch: true\r\n        })\r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.authInfo.isAuth === true ? \"\" : <Redirect to=\"/\" />}\r\n                {this.handleAuth()}\r\n                <div className=\"profilePage\">\r\n                    <div className=\"profileMainCont\">\r\n                        <div className=\"yourProfile\">\r\n                            <h3>Welcome {this.props.authInfo.username}</h3>\r\n                            <p>\r\n                                This is your profile page. Here you can see and change almost anything! Below you can change your password and email, also you can see your lyric posts and edit them. And don't forget, here you are going to find every lyric post you liked, and your favouarites posts! \r\n                            </p>\r\n                        </div>\r\n                        <div className=\"profileChangePwd\">\r\n                            <h4>Password Change</h4>\r\n                            <form onSubmit={this.handleSubmitChangePwd} >\r\n                                {this.state.fillFieldsPwd === true ? <h6 className=\"text-center text-danger\">Please Fill All The Fields!</h6> : \"\" }\r\n                                {this.state.newPwdDontMatch === true ? <h6 className=\"text-center text-danger\">Passwords Don't Match!</h6> : \"\" }\r\n                                {this.state.pwdDontMatch === true ? <h6 className=\"text-center text-danger\">Unexpected error, password could not be changed!</h6> : \"\" }\r\n                                {this.state.pwdSuccess === true ? <h6 className=\"text-center text-success\">Password Changed Succesfully!</h6> : \"\"}\r\n                                <input type=\"password\" name=\"oldPassword\" id=\"oldPassword\" placeholder=\"Your old password...\" className=\"form-control\" />\r\n                                <input type=\"password\" name=\"newPwd1\" id=\"newPwd1\" placeholder=\"Your new password...\" className=\"form-control\" />\r\n                                <input type=\"password\" name=\"newPwd2\" id=\"newPwd2\" placeholder=\"Your new password again...\" className=\"form-control\" />\r\n                                <div>\r\n                                    <button type=\"submit\">Update</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"profileChangeEmail\">\r\n                            <h4>Email Change</h4>\r\n                            {this.state.fillFieldsEmail === false ? \"\" : <h6 className=\"text-center text-danger\">Please Fill All The Fields!</h6>}\r\n                            {this.state.emailsDontMatch === false ? \"\" : <h6 className=\"text0-enter text-danger\">Email Don't Match</h6> }\r\n                            {this.state.newEmailsDontMatch === false ? \"\" : <h6 className=\"text-center text-danger\">New Emails Don't Match</h6> }\r\n                            {this.state.emailSuccess === true ? <h6 className=\"text-center text-success\">Email Changed Successfully!</h6> : this.state.emailSuccess === false ? <h6 className=\"text-center text-danger\">Unexpected error, email could not be changed!</h6> : \"\" }\r\n                            <form onSubmit={this.handleSubmitChangeEmail} >\r\n                                <input type=\"email\" name=\"oldEmail\" id=\"oldEmail\" placeholder=\"Your old email...\" className=\"form-control\" onChange={this.handleOnChangeInput}  />\r\n                                <input type=\"email\" name=\"newEmail1\" id=\"newEmail1\" placeholder=\"Your new email...\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                                <input type=\"email\" name=\"newEmail2\" id=\"newEmail2\" placeholder=\"Your new email again...\" className=\"form-control\" onChange={this.handleOnChangeInput} />\r\n                                <div>\r\n                                    <button type=\"submit\">Update</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"checkFav\">\r\n                            <Link to={{ pathname: `/profile/${this.props.authInfo.username}/faviouarites`, state: { props: this.props.authInfo, name: this.props.authInfo.username }}}>Navigate to your favouarites</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"lyricPosts\" style={{maxHeight: 700, overflowY: \"scroll\"}}>\r\n                        <h3 className=\"text-center mb-3\">Your Total Posts: {this.state.fetchedData.length}</h3>\r\n                        {this.handleLyricPosts()}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class EditLyrics extends Component {\r\n\r\n    state = {\r\n        post: '',\r\n        titleSong: '',\r\n        authorSong: '',\r\n        urlSong: '',\r\n        songLyrics: '',\r\n        albumSong: '',\r\n        langSong: '',\r\n        urlSongEmbed: '',\r\n        emptyFields: undefined,\r\n        apiResponse: undefined\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // Get current URL\r\n        var currentUrl = window.location.href;\r\n\r\n        // Split current URL on \"/\" \r\n        var currentUrlArray = currentUrl.split(\"/\");\r\n\r\n        // Get last item from array, witch is the username\r\n        var postIdCheck = currentUrlArray[currentUrlArray.length - 1];\r\n\r\n        // Start API Call\r\n        const url = `https://lyricalplace-api.herokuapp.com/api/lyrics/post/${postIdCheck}`;\r\n\r\n        const response = await fetch(url);\r\n\r\n        const data = await response.json();\r\n        \r\n        this.setState({\r\n            post: data.post,\r\n            titleSong: data.post[0].songTitle,\r\n            authorSong: data.post[0].songSinger,\r\n            urlSong: data.post[0].songUrlYt,\r\n            songLyrics: data.post[0].songLyrics,\r\n            albumSong: data.post[0].songAlbum,\r\n            langSong: data.post[0].songLang,\r\n            urlSongEmbed: ''\r\n        })\r\n\r\n        this.convertUrltoUrlEmbed();\r\n\r\n    }\r\n\r\n    async handleUpdate(data, url) {\r\n        try {\r\n\r\n            // PUT Request Options\r\n            const requestOptions = {\r\n                method: 'PUT',\r\n                headers: { \r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json', \r\n                },\r\n                body: JSON.stringify(data)\r\n            };\r\n\r\n            const result = await fetch(url, requestOptions);\r\n\r\n            if (result.status === 200) {\r\n                this.setState({\r\n                    apiResponse: true\r\n                })\r\n                return;\r\n            } else {\r\n                this.setState({\r\n                    apiResponse: false\r\n                })\r\n                return;\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        \r\n\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Reset State For EmptyFields Error and for API response\r\n        this.setState({\r\n            emptyFields: undefined,\r\n            apiResponse: undefined\r\n        })\r\n\r\n        // Check For Empty Fields\r\n        if (this.state.titleSong === \"\" || this.state.authorSong === \"\" || this.state.albumSong === \"\" || this.state.urlSong === \"\" || this.state.urlSongEmbed === \"\" || this.state.songLyrics === \"\" || this.state.langSong === \"\") {\r\n            this.setState({\r\n                emptyFields: \"Please fill all the fields!\"\r\n            })\r\n            return;\r\n        }\r\n\r\n        // Build API Object\r\n        const updateLyrics = {\r\n            songTitle: this.state.titleSong,\r\n            songSinger: this.state.authorSong,\r\n            songAlbum: this.state.albumSong,\r\n            songUrlYt: this.state.urlSong,\r\n            songUrlEmbed: this.state.urlSongEmbed,\r\n            songLyrics: this.state.songLyrics,\r\n            userAuthor: this.props.authInfo.username,\r\n            songLang: this.state.langSong\r\n        }\r\n\r\n        const url = `https://lyricalplace-api.herokuapp.com/api/lyrics/update/${this.state.post[0]._id}`;\r\n\r\n        this.handleUpdate(updateLyrics, url);\r\n\r\n    }\r\n\r\n    postHandler = () => {\r\n        let objFetched = Object.entries(this.state.post);\r\n            return (\r\n                <div className=\"post\" key={objFetched[0][1]._id}>\r\n                    <h2>Song Info</h2>\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <label htmlFor=\"titleSong\">Song Title: *</label>\r\n                        <input type=\"text\" name=\"titleSong\" id=\"titleSong\" className=\"form-control\" value={this.state.titleSong} onChange={this.handleOnChangeInput} />\r\n                        <label htmlFor=\"authorSong\">Song Singer(s): *</label>                                              \r\n                        <input type=\"text\" name=\"authorSong\" id=\"authorSong\" className=\"form-control\" value={this.state.authorSong} onChange={this.handleOnChangeInput} />\r\n                        <label htmlFor=\"langSong\">Song Language: *</label>\r\n                        <input type=\"text\" name=\"langSong\" id=\"langSong\" className=\"form-control\" value={this.state.langSong} onChange={this.handleOnChangeInput} />\r\n                        <label htmlFor=\"albumSong\">Song Album: *</label>\r\n                        <input type=\"text\" name=\"albumSong\" id=\"albumSong\" className=\"form-control\" value={this.state.albumSong} onChange={this.handleOnChangeInput} />\r\n                        <label htmlFor=\"urlSong\">Song URL: *</label>\r\n                        <input type=\"text\" name=\"urlSong\" id=\"urlSong\" className=\"form-control\" value={this.state.urlSong} onChange={this.handleOnChangeInput} />\r\n                        <label htmlFor=\"songLyrics\">Song Lyrics: ( 10.000 Words Maximum ) *</label> \r\n                        <textarea name=\"songLyrics\" id=\"songLyrics\" cols=\"30\" rows=\"10\" className=\"form-control\" maxLength=\"10000\" value={this.state.songLyrics} onChange={this.handleOnChangeInput} ></textarea>\r\n                        <div className=\"d-flex flex-row justify-content-end align-items-center\">\r\n                            <button type=\"submit\" className=\"mt-3\">Update</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n       \r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n        this.convertUrltoUrlEmbed();\r\n    }\r\n\r\n    convertUrltoUrlEmbed = () => {\r\n        // Get URL from YouTube\r\n        const url = this.state.urlSong;\r\n\r\n        // Split URL on '=' to get Embed Code // arrUrl[1] -> Contains the Embed Code\r\n        const arrUrl = url.split('=');\r\n\r\n        // Build Embed URL \r\n        const embedUrl = \"https://www.youtube.com/embed/\" + arrUrl[1];\r\n\r\n        this.setState({\r\n            urlSongEmbed: embedUrl\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"lyricsEditMain\">\r\n                    <div className=\"verifyLE\">\r\n                        <h3>{this.props.authInfo.username}'s Post {this.state.post[0] === undefined ? \"\" : this.state.post[0].songTitle}</h3>\r\n                        <h5 className=\"text-center text-danger\">{this.state.emptyFields === undefined ? \"\" : this.state.emptyFields}</h5>\r\n                        <h5 className=\"text-center text-danger\">{this.state.apiResponse === false ? \"Sorry, something went wrong contacting the server!\" : \"\"}</h5>\r\n                        <h5 className=\"text-center text-success\">{this.state.apiResponse === true ? \"Lyric Post Updated!\" : \"\"}</h5>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"lyricPost\">\r\n                        { this.state.post[0] === undefined ? \"\" : this.postHandler() }\r\n                        <div className=\"sideInfoCont\">\r\n                            <div className=\"sideInfo\">\r\n                                <h3>How do I update my lyric post?</h3>\r\n                                <hr />\r\n                                <p>\r\n                                    Updating your own post is an easy-to-do task! Simply, change the values on the form given, check the preview, see if you like it, and finally click on the update button! Remeber, the preview is just a preview! It's not how your lyric post will appear, but will be close to that! <br />\r\n                                    Also please make sure you fill all the fields, and leave no one empty! Values are pre-filled for you, you simply change what you need to change and leave the rest as it is! Of corse you can change multiple values at once!\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"preview\">\r\n                                <h3>{this.state.authorSong} - {this.state.titleSong} ({this.state.langSong})</h3>\r\n                                <h6 className=\"text-center\">{this.state.albumSong}</h6>\r\n                                <hr />\r\n                                <div className=\"d-flex flex-row justify-content-center align-items-center\">\r\n                                    <iframe width=\"280\" height=\"157.5\" src={this.state.urlSongEmbed} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                                </div>\r\n                                <div className=\"bg-dark text-light p-4 rounded\">\r\n                                    {this.state.songLyrics}\r\n                                </div>\r\n                                <h6>Lyrics by: {this.props.authInfo.username}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class FindByArtist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: '',\r\n            searchTerm: ''\r\n        }\r\n    }\r\n\r\n    // API Call {: GETTER :}\r\n    async componentDidMount() {\r\n        const url = \"https://lyricalplace-api.herokuapp.com/api/topTrendingSong\";\r\n\r\n        const response = await fetch(url);\r\n\r\n        const data = await response.json();\r\n\r\n        var titleArray = [];\r\n        var artistArray = [];\r\n        var authorArray = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            titleArray.push(data[i].songTitle);\r\n            artistArray.push(data[i].songSinger);\r\n            authorArray.push(data[i].userAuthor);\r\n        }\r\n\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    spreadData = () => {\r\n        let fetchedData = Object.entries(this.state.data);\r\n        let searchTerm = this.state.searchTerm;\r\n\r\n        return fetchedData.filter((val) => \r\n            searchTerm === '' ? val : val[1].songSinger.toLowerCase().includes(searchTerm.toLowerCase()) ? val : ''\r\n        ).map((val, key) => {\r\n            return (\r\n                <a className=\"post-a\" key={key} href={`/lyrics/${val[1]._id}`}>\r\n                    <strong>{val[1].songSinger}</strong> - {val[1].songTitle}  by {val[1].userAuthor} ({val[1].songLang}) ({val[1].songAlbum})\r\n                </a>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n        this.spreadData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"find-lyrics-outer\">\r\n                <div className=\"top-div-find\">\r\n                    <h2>Here, you find lyrics by Artist</h2>\r\n                    <hr />\r\n                    <p>\r\n                        Initialy, we display all Artists, but you can use the search bar to speed things up!\r\n                    </p>\r\n                </div>\r\n                <div className=\"bottom-div-find\">\r\n                    <div className=\"filtered-lyrics\">\r\n                        <div className=\"search-fiald\">\r\n                            <form>\r\n                                <input type=\"text\" name=\"searchTerm\" id=\"searchTerm\" className=\"form-control\" placeholder=\"Search lyrics by artsits...\" onChange={this.handleOnChangeInput} />\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"output-div\">\r\n                            {this.state.data[0] !== undefined ? this.spreadData() : \"\" }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"findInfo\">\r\n                        <div className=\"logInPromo\">\r\n                            <header>Don't found what you are looking?</header>\r\n                            <p>\r\n                                You can try and search via \"Albums\", \"Authors\" or \"Titles\", \"Languages\"! If you still can't find what you are looking for, you can always log in and write your own lyric post to help others find what they are looking for! Happy searching!\r\n                            </p>\r\n                            <p>\r\n                                Remember to add your favouarite songs to your collection! This way you can access them more easyly. <br />\r\n                                But also remember, you can't add your own song to your collection. Your song's can be accessed via the \"My Profile\" section, where you can delete them or edit them!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class FindByTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: '',\r\n            searchTerm: ''\r\n        }\r\n    }\r\n\r\n    // API Call {: GETTER :}\r\n    async componentDidMount() {\r\n        const url = \"https://lyricalplace-api.herokuapp.com/api/topTrendingSong\";\r\n\r\n        const response = await fetch(url);\r\n\r\n        const data = await response.json();\r\n\r\n        var titleArray = [];\r\n        var artistArray = [];\r\n        var authorArray = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            titleArray.push(data[i].songTitle);\r\n            artistArray.push(data[i].songSinger);\r\n            authorArray.push(data[i].userAuthor);\r\n        }\r\n\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    spreadData = () => {\r\n        let fetchedData = Object.entries(this.state.data);\r\n        let searchTerm = this.state.searchTerm;\r\n\r\n        return fetchedData.filter((val) => \r\n            searchTerm === '' ? val : val[1].songTitle.toLowerCase().includes(searchTerm.toLowerCase()) ? val : ''\r\n        ).map((val, key) => {\r\n            return (\r\n                <a className=\"post-a\" key={key} href={`/lyrics/${val[1]._id}`}>\r\n                    <strong>{val[1].songTitle}</strong> - {val[1].songSinger}  by {val[1].userAuthor} ({val[1].songLang}) ({val[1].songAlbum})\r\n                </a>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n        this.spreadData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"find-lyrics-outer\">\r\n                <div className=\"top-div-find\">\r\n                    <h2>Here, you find lyrics by Title</h2>\r\n                    <hr />\r\n                    <p>\r\n                        Initialy, we display all titles, but you can use the search bar to speed things up!\r\n                    </p>\r\n                </div>\r\n                <div className=\"bottom-div-find\">\r\n                    <div className=\"filtered-lyrics\">\r\n                        <div className=\"search-fiald\">\r\n                            <form>\r\n                                <input type=\"text\" name=\"searchTerm\" id=\"searchTerm\" className=\"form-control\" placeholder=\"Search lyrics by artsits...\" onChange={this.handleOnChangeInput} />\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"output-div\">\r\n                            {this.state.data[0] !== undefined ? this.spreadData() : \"\" }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"findInfo\">\r\n                        <div className=\"logInPromo\">\r\n                            <header>Don't found what you are looking?</header>\r\n                            <p>\r\n                                You can try and search via \"Albums\", \"Authors\" or \"Artist\", \"Languages\"! If you still can't find what you are looking for, you can always log in and write your own lyric post to help others find what they are looking for! Happy searching!\r\n                            </p>\r\n                            <p>\r\n                                Remember to add your favouarite songs to your collection! This way you can access them more easyly. <br />\r\n                                But also remember, you can't add your own song to your collection. Your song's can be accessed via the \"My Profile\" section, where you can delete them or edit them!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class FindByAuthor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: '',\r\n            searchTerm: ''\r\n        }\r\n    }\r\n\r\n    // API Call {: GETTER :}\r\n    async componentDidMount() {\r\n        const url = \"https://lyricalplace-api.herokuapp.com/api/topTrendingSong\";\r\n\r\n        const response = await fetch(url);\r\n\r\n        const data = await response.json();\r\n\r\n        var titleArray = [];\r\n        var artistArray = [];\r\n        var authorArray = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            titleArray.push(data[i].songTitle);\r\n            artistArray.push(data[i].songSinger);\r\n            authorArray.push(data[i].userAuthor);\r\n        }\r\n\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    spreadData = () => {\r\n        let fetchedData = Object.entries(this.state.data);\r\n        let searchTerm = this.state.searchTerm;\r\n\r\n        return fetchedData.filter((val) => \r\n            searchTerm === '' ? val : val[1].userAuthor.toLowerCase().includes(searchTerm.toLowerCase()) ? val : ''\r\n        ).map((val, key) => {\r\n            return (\r\n                <a className=\"post-a\" key={key} href={`/lyrics/${val[1]._id}`}>\r\n                    <strong>{val[1].userAuthor}</strong> | {val[1].songSinger} - {val[1].songTitle}  by  ({val[1].songLang}) ({val[1].songAlbum})\r\n                </a>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n        this.spreadData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"find-lyrics-outer\">\r\n                <div className=\"top-div-find\">\r\n                    <h2>Here, you find lyrics by Author</h2>\r\n                    <hr />\r\n                    <p>\r\n                        Initialy, we display all Authors, but you can use the search bar to speed things up!\r\n                    </p>\r\n                </div>\r\n                <div className=\"bottom-div-find\">\r\n                    <div className=\"filtered-lyrics\">\r\n                        <div className=\"search-fiald\">\r\n                            <form>\r\n                                <input type=\"text\" name=\"searchTerm\" id=\"searchTerm\" className=\"form-control\" placeholder=\"Search lyrics by artsits...\" onChange={this.handleOnChangeInput} />\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"output-div\">\r\n                            {this.state.data[0] !== undefined ? this.spreadData() : \"\" }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"findInfo\">\r\n                        <div className=\"logInPromo\">\r\n                            <header>Don't found what you are looking?</header>\r\n                            <p>\r\n                                You can try and search via \"Albums\", \"Artist\" or \"Titles\", \"Languages\"! If you still can't find what you are looking for, you can always log in and write your own lyric post to help others find what they are looking for! Happy searching!\r\n                            </p>\r\n                            <p>\r\n                                Remember to add your favouarite songs to your collection! This way you can access them more easyly. <br />\r\n                                But also remember, you can't add your own song to your collection. Your song's can be accessed via the \"My Profile\" section, where you can delete them or edit them!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class FindByAlbum extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: '',\r\n            searchTerm: ''\r\n        }\r\n    }\r\n\r\n    // API Call {: GETTER :}\r\n    async componentDidMount() {\r\n        const url = \"https://lyricalplace-api.herokuapp.com/api/topTrendingSong\";\r\n\r\n        const response = await fetch(url);\r\n\r\n        const data = await response.json();\r\n\r\n        var titleArray = [];\r\n        var artistArray = [];\r\n        var authorArray = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            titleArray.push(data[i].songTitle);\r\n            artistArray.push(data[i].songSinger);\r\n            authorArray.push(data[i].userAuthor);\r\n        }\r\n\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    spreadData = () => {\r\n        let fetchedData = Object.entries(this.state.data);\r\n        let searchTerm = this.state.searchTerm;\r\n\r\n        return fetchedData.filter((val) => \r\n            searchTerm === '' ? val : val[1].songAlbum.toLowerCase().includes(searchTerm.toLowerCase()) ? val : ''\r\n        ).map((val, key) => {\r\n            return (\r\n                <a className=\"post-a\" key={key} href={`/lyrics/${val[1]._id}`}>\r\n                    {val[1].songSinger} - {val[1].songTitle} <strong>(Album: {val[1].songAlbum})</strong>  by {val[1].userAuthor} ({val[1].songLang})\r\n                </a>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n        this.spreadData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"find-lyrics-outer\">\r\n                <div className=\"top-div-find\">\r\n                    <h2>Here, you find lyrics by Album</h2>\r\n                    <hr />\r\n                    <p>\r\n                        Initialy, we display all Albums, but you can use the search bar to speed things up!\r\n                    </p>\r\n                </div>\r\n                <div className=\"bottom-div-find\">\r\n                    <div className=\"filtered-lyrics\">\r\n                        <div className=\"search-fiald\">\r\n                            <form>\r\n                                <input type=\"text\" name=\"searchTerm\" id=\"searchTerm\" className=\"form-control\" placeholder=\"Search lyrics by artsits...\" onChange={this.handleOnChangeInput} />\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"output-div\">\r\n                            {this.state.data[0] !== undefined ? this.spreadData() : \"\" }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"findInfo\">\r\n                        <div className=\"logInPromo\">\r\n                            <header>Don't found what you are looking?</header>\r\n                            <p>\r\n                                You can try and search via \"Author\", \"Artist\" or \"Titles\", \"Languages\"! If you still can't find what you are looking for, you can always log in and write your own lyric post to help others find what they are looking for! Happy searching!\r\n                            </p>\r\n                            <p>\r\n                                Remember to add your favouarite songs to your collection! This way you can access them more easyly. <br />\r\n                                But also remember, you can't add your own song to your collection. Your song's can be accessed via the \"My Profile\" section, where you can delete them or edit them!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class FindByLanguage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: '',\r\n            searchTerm: ''\r\n        }\r\n    }\r\n\r\n    // API Call {: GETTER :}\r\n    async componentDidMount() {\r\n        const url = \"https://lyricalplace-api.herokuapp.com/api/topTrendingSong\";\r\n\r\n        const response = await fetch(url);\r\n\r\n        const data = await response.json();\r\n\r\n        var titleArray = [];\r\n        var artistArray = [];\r\n        var authorArray = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            titleArray.push(data[i].songTitle);\r\n            artistArray.push(data[i].songSinger);\r\n            authorArray.push(data[i].userAuthor);\r\n        }\r\n\r\n        this.setState({\r\n            data: data\r\n        })\r\n    }\r\n\r\n    spreadData = () => {\r\n        let fetchedData = Object.entries(this.state.data);\r\n        let searchTerm = this.state.searchTerm;\r\n\r\n        return fetchedData.filter((val) => \r\n            searchTerm === '' ? val : val[1].songLang.toLowerCase().includes(searchTerm.toLowerCase()) ? val : ''\r\n        ).map((val, key) => {\r\n            return (\r\n                <a className=\"post-a\" key={key} href={`/lyrics/${val[1]._id}`}>\r\n                    <strong>{val[1].userAuthor}</strong> | {val[1].songSinger} - {val[1].songTitle}  by  ({val[1].songLang}) ({val[1].songAlbum})\r\n                </a>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleOnChangeInput = (event) => {\r\n        this.setState({\r\n            [`${event.target.name}`]: event.target.value\r\n        });\r\n        this.spreadData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"find-lyrics-outer\">\r\n                <div className=\"top-div-find\">\r\n                    <h2>Here, you find lyrics by Language</h2>\r\n                    <hr />\r\n                    <p>\r\n                        Initialy, we display all languages, but you can use the search bar to speed things up!\r\n                    </p>\r\n                </div>\r\n                <div className=\"bottom-div-find\">\r\n                    <div className=\"filtered-lyrics\">\r\n                        <div className=\"search-fiald\">\r\n                            <form>\r\n                                <input type=\"text\" name=\"searchTerm\" id=\"searchTerm\" className=\"form-control\" placeholder=\"Search lyrics by artsits...\" onChange={this.handleOnChangeInput} />\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"output-div\">\r\n                            {this.state.data[0] !== undefined ? this.spreadData() : \"\" }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"findInfo\">\r\n                        <div className=\"logInPromo\">\r\n                            <header>Don't found what you are looking?</header>\r\n                            <p>\r\n                                You can try and search via \"Author\", \"Artist\" or \"Title\", \"Album! If you still can't find what you are looking for, you can always log in and write your own lyric post to help others find what they are looking for! Happy searching!\r\n                            </p>\r\n                            <p>\r\n                                Remember to add your favouarite songs to your collection! This way you can access them more easyly. <br />\r\n                                But also remember, you can't add your own song to your collection. Your song's can be accessed via the \"My Profile\" section, where you can delete them or edit them!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class SidenavAuth extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            url: '',\r\n            data: '',\r\n            dataInit: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleAuthAPI();\r\n    }\r\n\r\n    // API Call AUTHED USER\r\n    async handleAuthData(user) {\r\n        const url = `https://lyricalplace-api.herokuapp.com/api/getFav/${user}`;\r\n\r\n        const response = await fetch(url);\r\n\r\n        const data = await response.json();\r\n\r\n        // Clear Output If No Songs Have Been Found\r\n        if (data.message === \"No favouarite songs found :(\") {\r\n            this.setState({\r\n                dataInit: false,\r\n                data: data.message\r\n            })\r\n            return;\r\n        }\r\n\r\n        const slicedData = data.fav.slice(-10).reverse();\r\n\r\n        this.setState({\r\n            data: slicedData\r\n        })\r\n    }\r\n\r\n    handleAuthAPI = () => {\r\n        if (this.props.isAuth.isAuth) {\r\n            // Call API Fav\r\n            this.handleAuthData(this.props.isAuth.username)\r\n        } \r\n    }\r\n\r\n    spreadData = () => {\r\n        let objData = Object.entries(this.state.data)\r\n        if (this.state.dataInit === true) {\r\n            return objData.map(item => {\r\n\r\n                // Return Data\r\n                return (\r\n                    <a key={item[1]._id + \"link\"} href={`/lyrics/${item[1]._id}`}>\r\n                        <span key={item[1]._id + \"first_span\"} className=\"sidenav-span\" >{item[1].songTitle} - {item[1].songSinger} ({item[1].songLang})</span>\r\n                        <br />\r\n                        <span className=\"sidenav-by\" key={item[1]._id + \"second_span\"}>Lyrics by: {item[1].userAuthor}</span>\r\n                    </a> \r\n                )\r\n            })\r\n        } else if (this.state.dataInit === false) {\r\n            return (\r\n                <a href={`/lyrics/Titles`}>\r\n                    <span className=\"sidenav-span\">{this.state.data}</span>\r\n                    <br />\r\n                    <span className=\"sidenav-by\">Let's add one now!</span>\r\n                </a> \r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"sideNav\" id=\"sidenav\">\r\n                {/* {this.handleAuthAPI()} */}\r\n                <button onClick={this.props.onClose}>{this.props.isAuth.isAuth === true  ? \"Hide Favouarites\" : \"\" } <i className=\"fa fa-times\"></i></button>\r\n                <hr/>\r\n                {this.spreadData()}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nexport default class Favouarites extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // Make API call to retrive faviouarite posts\r\n        if (this.props.location.state !== undefined) {\r\n            const url = `https://lyricalplace-api.herokuapp.com/api/getFav/${this.props.location.state.name}`;\r\n\r\n            const response = await fetch(url);\r\n    \r\n            const data = await response.json();\r\n    \r\n            // Check For Un-Authorizes User\r\n            if (data.message === \"No favouarite songs found :(\") {\r\n                return;\r\n            }\r\n    \r\n            const slicedData = data.fav.slice(-10).reverse();\r\n    \r\n            // Set status \r\n            this.setState({\r\n                data: slicedData\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    handleAuth = () => {\r\n        // Handle AUTH Logic\r\n        var recieved = this.props.location.state;\r\n\r\n        // If user is not sent via link in <Profile /> , redirect him!\r\n        if (recieved === undefined) {\r\n            return (\r\n                <Redirect to=\"/\" />\r\n            )\r\n        }\r\n    }\r\n\r\n    spreadData = () => {\r\n        let objData = Object.entries(this.state.data)\r\n\r\n        if (objData.length === 0) {\r\n            return (\r\n                <>\r\n                    <h5>Sorry, seems like you have no favouarite songs :(</h5>\r\n                    <a href=\"/lyrics/Titles\" className=\"btn btn-dark\">\r\n                        Let's add one now!\r\n                    </a>\r\n                </>\r\n            )\r\n        } else {\r\n            return objData.map(item => {\r\n\r\n                // Return Data\r\n                return (\r\n                    <a key={item[1]._id + \"link\"} href={`/lyrics/${item[1]._id}`} className=\"success-a-fav\">\r\n                        <span key={item[1]._id + \"first_span\"} >{item[1].songTitle} - {item[1].songSinger} ({item[1].songLang}) ({item[1].songAlbum})</span>\r\n                        <br />\r\n                        <span key={item[1]._id + \"second_span\"}>Lyrics by: {item[1].userAuthor}</span>\r\n                    </a> \r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"fav-outer-div\">\r\n                    <div className=\"fav-info\">\r\n                        <h3><i className=\"fa fa-heart text-danger\" aria-hidden=\"true\"></i> Your Favouarite Page <i className=\"fa fa-heart text-danger\" aria-hidden=\"true\"></i></h3>\r\n                        <hr />\r\n                        <p>\r\n                            Here, you can see all the songs you liked! You can navigate to each song individualy and revisit it easily! \r\n                        </p>\r\n                    </div>\r\n                    <div className=\"fav-main\">\r\n                        <div className=\"fav-main-cont mt-4\">\r\n                            <div className=\"fav-h4-a\">\r\n                                <h4>Total songs you like: {this.state.data.length} </h4>\r\n                                <a href=\"/lyrics/Titles\" id=\"explore-link\">Explore new songs now!</a>\r\n                            </div>\r\n                            {this.spreadData()}\r\n                            {this.handleAuth()}\r\n                        </div>\r\n                        <div className=\"fav-main-info mt-4\">\r\n                            <div className=\"fav-info-side\">\r\n                                <header>How \"Favourites\" Side-nav works? <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i></header>\r\n                                <hr />\r\n                                <p>\r\n                                    We designed this simple sidenav, keeping in mind your ease-of-use. Practicaly, the sidenav displays the 10 most-recent songs you added to your faviouarite list. If there are less than 10 or exactly 10, it displays them all. <br />\r\n                                    Sidenav, works this way, for a couple of reasons. First, we wanted to maintain the look, feel and factionality of the \"Latest Updates\" sidenav, witch you see, if you are not logged-in. So, as the \"Latest Updates\" sidenav displays the 10 most-recent updates this one does the same but for your favouarites! Secondly, we wanted it to make it simple to use and help you access the songs you might be searching the most!\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"fav-info-side\">\r\n                                <header>Can I see how many people liked my posts?</header>\r\n                                <p>\r\n                                    Currenlty, we don't support this option. But of course we will implement it in the future. For now, you can only see your likes and not how many or who has liked your post. <br />\r\n                                    Also, in the future we might make the favouarites public, so that any user can see how many \"favouarites\" a song has and judge which one probably is the best quick and easy\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Navbar from './Components/Navbar.js';\nimport MainCont from './Components/MainCont.js';\nimport Sidenav from './Components/Sidenav.js';\nimport Footer from './Components/Footer.js';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Contribute from './Components/Contrib.js';\nimport Register from './Components/Register.js';\nimport TopTrendingTemplate from './Components/TopTrendingTemplate.js';\nimport Login from './Components/Login.js';\nimport LyricsMain from './Components/LyricsMain.js';\nimport Profile from './Components/Profile.js';\nimport EditLyrics from './Components/EditLyrics.js';\nimport FindByArtist from './Components/findByArtist.js';\nimport FindByTitle from './Components/findByTitle.js';\nimport FindByAuthor from './Components/findByAuthor.js';\nimport FindByAlbum from './Components/findByAlbum.js';\nimport FindByLanguage from './Components/findByLang.js';\nimport SidenavAuth from './Components/SidenavAuth.js';\nimport Favouarites from './Components/Favouarites.js';\n\nexport default class App extends React.Component {\n  // Main Constructor\n  constructor(props) {\n    super(props);\n    \n    // Constructor Binds\n    this.handleSidenav = this.handleSidenav.bind(this);\n    this.giveAuthInfo = this.giveAuthInfo.bind(this);\n    this.handleLogOut = this.handleLogOut.bind(this);\n  }\n\n  // Main State\n  state = {\n    sidenavFlag: true,\n    topTrendingSong: {\n      src: \"\",\n      title: \"\",\n      author: \"\",\n      siteViews: null,\n      lyricsURL: \"\",\n      songId: null,\n      lyrics: null\n    },\n    authConn: {\n      token: '',\n      message: '',\n      username: '',\n      userId: '',\n      email: '',\n      isAuth: false\n    }\n  }\n\n  // API Call {: GETTER :}\n  async componentDidMount() {\n    const url = \"https://lyricalplace-api.herokuapp.com/api/topTrendingSong\";\n\n    const response = await fetch(url);\n\n    const data = await response.json();\n\n    const dataLength = data.length;\n\n    this.setState({\n      topTrendingSong: {\n        src: data[dataLength - 1].songUrlEmbed,\n        title: data[dataLength - 1].songTitle,\n        author: data[dataLength - 1].songSinger,\n        songId: data[dataLength - 1]._id,\n        lyrics: data[dataLength - 1].songLyrics\n      }\n    })\n\n    this.giveAuthInfo();\n  }\n\n  // Pass-down Functions\n  handleSidenav = () => {\n    const flag = this.state.sidenavFlag;\n    const sidenav = document.getElementById(\"sidenav\");\n\n    if (flag) {\n      sidenav.style.display = \"none\";\n    } else {\n      sidenav.style.display = \"block\";\n    }\n\n    this.setState({\n      sidenavFlag: !flag\n    })\n  }\n\n  giveAuthInfo = () => {\n    let AUTH = JSON.parse(localStorage.getItem('authData'));\n\n    if (AUTH !== null) {\n      this.setState({\n        authConn: {\n          token: AUTH.token,\n          message: AUTH.message,\n          username: AUTH.username,\n          userId: AUTH.userId,\n          email: AUTH.email,\n          isAuth: AUTH.isAuth\n        }\n      })\n\n    } else {\n      return;\n    }\n    \n    \n  }\n\n  handleLogOut = () => {\n    this.setState({\n      authConn: {\n        token: '',\n        message: '',\n        username: '',\n        userId: '',\n        email: '',\n        isAuth: false\n      }\n    })\n  }\n\n\n  render () {\n    return (\n      <Router>\n        <Navbar onOpen={this.handleSidenav} isAuth={this.state.authConn} logOut={this.handleLogOut} />\n        <Switch>\n        <Route path=\"/\" exact render={ (state) => (<MainCont video={this.state.topTrendingSong} />) } />\n        <Route path=\"/contrib\"  render={ (state) => (<Contribute isAuth={this.state.authConn} />) } />\n        <Route path=\"/register\" render={ (state) => (<Register isAuth={this.state.authConn} />) } />\n        <Route path=\"/login\" render={ (state) => (<Login authInfo={this.giveAuthInfo} />) } />\n        <Route path=\"/lyrics/topTrendingSong\" exact render={ (state) => (<TopTrendingTemplate video={this.state.topTrendingSong} />) } />\n        <Route path=\"/lyrics/Artists\" exact component={FindByArtist} />\n        <Route path=\"/lyrics/Titles\" exact component={FindByTitle} />\n        <Route path=\"/lyrics/Authors\" exact component={FindByAuthor} />\n        <Route path=\"/lyrics/Album\" exact component={FindByAlbum} />\n        <Route path=\"/lyrics/Language\" exact component={FindByLanguage} />\n        <Route path=\"/lyrics/:id\" render={ (state) => (<LyricsMain authInfo={this.state.authConn} />) } />\n        <Route path=\"/profile/:name\" exact render={ (state) => (<Profile authInfo={this.state.authConn} />) } />\n        <Route path=\"/profile/:name/faviouarites\" exact component={Favouarites} />\n        <Route path=\"/profile/:username/:postId\" exact render={ (state) => (<EditLyrics authInfo={this.state.authConn} />) } />\n        </Switch>\n        {this.state.authConn.username !== '' ? <SidenavAuth onClose={this.handleSidenav} isAuth={this.state.authConn} /> : <Sidenav onClose={this.handleSidenav} isAuth={this.state.authConn} />}\n        {/* <Sidenav onClose={this.handleSidenav} isAuth={this.state.authConn} /> */}\n        <Footer />\n      </Router>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Statick/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}